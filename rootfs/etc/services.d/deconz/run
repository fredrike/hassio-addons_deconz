#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start deCONZ service
# ==============================================================================

# Lookup udev link
bashio::log.info "Waiting for device..."
DECONZ_DEVICE=$(bashio::config 'device')
if [[ -c "${DECONZ_DEVICE}" ]]; then
    bashio::log.debug "Specified device points to a character special file, continuing"
else
    # 180 second timeout to wait for udev to finish processing
    timeout=180
    while [[ ! -L "${DECONZ_DEVICE}" ]]; do
        if [[ "${timeout}" -eq 0 ]]; then
            bashio::exit.nok "No device ${DECONZ_DEVICE} found!"
        fi
        bashio::log.debug "Waiting for udev to link device..,"
        sleep 1
        ((timeout--))
    done
    DECONZ_DEVICE="$(readlink -f "${DECONZ_DEVICE}")"
    bashio::log.debug "Found device! Location: ${DECONZ_DEVICE}"
fi

# Load debug values
bashio::config.has_value 'dbg_info' \
    && DBG_INFO="$(bashio::config 'dbg_info')" || DBG_INFO=1
bashio::config.has_value 'dbg_aps' \
    && DBG_APS="$(bashio::config 'dbg_aps')" || DBG_APS=0
bashio::config.has_value 'dbg_otau' \
    && DBG_OTAU="$(bashio::config 'dbg_otau')" || DBG_OTAU=0
bashio::config.has_value 'dbg_zcl' \
    && DBG_ZCL="$(bashio::config 'dbg_zcl')" || DBG_ZCL=0
bashio::config.has_value 'dbg_zdp' \
    && DBG_ZDP="$(bashio::config 'dbg_zdp')" || DBG_ZDP=0


# Check if VNC is enabled
# VNC is not enabled as a seperate service, as it cannot handle multiple
# session when running in the foreground.
PLATFORM="minimal"
VNC_PORT="$(bashio::addon.port 5900)"
if bashio::var.has_value "${VNC_PORT}"; then
    ARCH="$(bashio::info.arch)"
    TMP_FOLDER=$(mktemp -d)
    export XDG_RUNTIME_DIR="${TMP_FOLDER}"
    export DISPLAY=":0"
    PLATFORM="xcb"

    # Fix tigervnc for 32 bits ARM
    if [[ "armhf armv7" = *"${ARCH}"* ]]; then
        export LD_PRELOAD=/lib/arm-linux-gnueabihf/libgcc_s.so.1
    fi

    # Fix tigervnc for 64 bits ARM
    if [[ "aarch64" = "${ARCH}" ]]; then
        export LD_PRELOAD=/lib/aarch64-linux-gnu/libgcc_s.so.1
    fi

    bashio::log.info "Starting VNC server..."
    tigervncserver \
        -name "Home Assistant - deCONZ" \
        -geometry 1920x1080 \
        -depth 16 \
        -localhost no \
        -PasswordFile /root/.vncpasswd \
        "${DISPLAY}" \
        &> /dev/null

    # Wait for VNC server to start before continuing
    bashio::log.info "Waiting for VNC to start"
    bashio::net.wait_for "${VNC_PORT}"
fi


# Send out discovery information to Home Assistant
./discovery &

# Start deCONZ
bashio::log.info "Starting the deCONZ gateway..."
exec deCONZ \
    -platform "${PLATFORM}" \
    --auto-connect=1 \
    --dbg-info="${DBG_INFO}" \
    --dbg-aps="${DBG_APS}" \
    --dbg-otau="${DBG_OTAU}" \
    --dbg-zcl="${DBG_ZCL}" \
    --dbg-zdp="${DBG_ZDP}" \
    --upnp=0 \
    --http-port=40850 \
    --ws-port=8081 \
    --dev="${DECONZ_DEVICE}"
